/*!
 * MindPlus
 * mpython
 *
 */
#include <MPython.h>
#include <DFRobot_Iot.h>

// 动态变量
volatile float mind_n_control;
// 函数声明
void obloqMqttEventT0(String& message);
void obloqMqttEventT1(String& message);
void obloqMqttEventT2(String& message);
void onButtonBPressed();
void obloqMqttEventT3(String& message);
void obloqMqttEventT4(String& message);
// 静态常量
const String topics[5] = {"g80lYKcGg","Igi-Lh2MR","-9uhxxTGR","RKByDxAMR","HtIwNx0Mg"};
const MsgHandleCb msgHandles[5] = {obloqMqttEventT0,obloqMqttEventT1,obloqMqttEventT2,obloqMqttEventT3,obloqMqttEventT4};
// 创建对象
DFRobot_Iot myIot;


// 主程序开始
void setup() {
	mPython.begin();
	myIot.setMqttCallback(msgHandles);
	buttonB.setPressedCallback(onButtonBPressed);
	myIot.wifiConnect("zyq", "12345678");
	while (!myIot.wifiStatus()) {yield();}
	display.setCursorLine(2);
	display.printLine("WIFI连接成功");
	myIot.init("iot.dfrobot.com.cn","jFSwAiFMg","","CFSQ0iFGRz",topics,1883);
	myIot.connect();
	while (!myIot.connected()) {yield();}
	display.setCursorLine(3);
	display.printLine("MQTT连接成功");
	rgb.write(-1, 0x0000FF);
	display.setCursorLine(1);
	display.printLine("欢迎使用抢答器");
	display.setCursorLine(2);
	display.printLine("请等待出题方出题");
	display.setCursorLine(3);
	display.printLine("抢答请按B键");
	rgb.write(-1, 0x000000);
}
void loop() {

}

// 事件回调函数
void obloqMqttEventT0(String& message) {
	display.fillScreen(0);
	rgb.write(-1, 0x000000);
	if ((message==String("start"))) {
		display.setCursorLine(1);
		display.printLine("抢答开始！");
		mind_n_control = 0;
	}
}
void obloqMqttEventT1(String& message) {
	display.setCursorLine(2);
	display.printLine((String((String("请 ") + String(message))) + String("回答该问题")));
	mind_n_control = 1;
}
void obloqMqttEventT2(String& message) {
	display.fillScreen(0);
	rgb.write(-1, 0x000000);
	display.setCursorLine(1);
	display.printLine(message);
}
void onButtonBPressed() {
	if ((0==mind_n_control)) {
		myIot.publish(topic_1, "1号");
		rgb.write(-1, 0x0000FF);
	}
}
void obloqMqttEventT3(String& message) {
	display.setCursorLine(4);
	display.printLine(message);
}
void obloqMqttEventT4(String& message) {
	display.setCursorLine(3);
	display.printLine(message);
}
